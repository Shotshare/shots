#!/usr/bin/env ruby
#arguments:
#  --no-programs
#  --no-configs
#
#  --P program whitelist
#  --p program blacklist
#
#  --c config whitelist
#  --C config blacklist
#
#  --k api_key
#  --d description of screenshot
#
## Get configuration
## Get key
#
## If no key then
### ask to submit anonymously
## or
### Ask for email and username to send key to and exit
#
## take screenshot
## gather programs unless specified not to
## gather configs unless specified not to
#
## Filter programs
## filter configs
#
## Submit with valid key

#require "shotshare"
require './lib/shotshare.rb'
require "optparse"

options = {}

parser = OptionParser.new do | opts |

  # Change banner
  # opts.banner = "Usage: #{$0} [options] /path/to/backupdir\nUsername and password are required."
  opts.on("-ld", "--debug", "Log in debug mode") do
    options[:debug] = true
  end

  opts.on("-li", "--info", "Log in info mode") do
    options[:info] = true
  end

  opts.on("-c", "--config", "Specify configuration file.") do
    options[:config] = true
  end

  opts.on("-k", "--key", "Api Key to use.") do
    options[:api_key] = true
  end

  opts.on("-r", "--register [EMAIL:USERNAME]", "Register with shotshare and obtain an API_KEY. Just requires valid email address.") do |str|
    options[:register] = true
    options[:email] = str.split(':').first
    options[:username] = str.split(':').last
  end

end
parser.parse!

#if ARGV.empty? || !options[:password] || !options[:username]
#  puts parser.banner
#  exit
#end
begin
  Shotshare::Shots.instance.run(options, ARGV)
rescue Interrupt
  puts "Exiting...\n"
rescue StandardError => e
  if e.message.downcase =~ /no api key/
    puts e.message
    puts "You might need to register with the website. It's pretty painless."
    puts "Try: #{$0} --register"

  elsif e.message.downcase =~ /Is a directory/
    puts e.message
    puts "You might be trying up create a file out of a directory."
    puts "If you have set a custom command, be sure that it's only selecting files."
  else
    raise e
  end
end
