#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'
require 'logger'

require_relative '../lib/shotshare'

# GLobal Vars
@log = Logger.new $stderr

# Parse Options
@config = nil
@api_key = 'c6f944030925f9fba8714f01d1844d2e'

SHOTSHARE_URL = 'http://shotshare.it'
SHOTSHARE_API = {
  :register => '/api/v1/register',
  :new_submission => '/api/v1/submission',
}

# Default configuration
DEFAULT_CONFIG = {
  'api_key' => '',
}

##
# Run startup routine.
#
# Prepares config and global variables
def init

  @pub = Shotshare::Publisher.new @api_key

  # Read configuration
  config_locations = [
    ".shots.conf",
    "#{ENV['HOME']}/.shots/config"
  ]

  # Check to see if configuration files exists
  # If not, use default config
  available_locations = config_locations.select { | loc |
    File.exists?(loc)
  }

  if available_locations.empty?
    @config = DEFAULT_CONFIG
  else
    @config = YAML.load_file(available_locations.first)
  end

  ## Get API_KEY
  @api_key ||= ENV['SHOTSHARE_API_KEY'] || @config['api_key']
end

def gather_programs
  # Gather desktop data
  ## Get running procs for user
  procs =  `ps -au $(whoami) | awk '{print $4}' | sort | uniq -u`
  ## Read proc whitelist/blacklist
  ## TODO: Apply WHITELIST / BLACKLIST

  # Save to file
  procs.split("\n").each do | p |
    program = p.chomp()
    if program
      @pub.upload_program program
    end
  end
end

def gather_colors
  # Gather .Xresources colors
  `xrdb -edit /tmp/shotshare_xresources`
  if $? == 0
    @pub.upload_configuration File.new('/tmp/shotshare_xresources','rb')
  end
end

def take_screenshot
  # Assemble screenshot command
  command = 'scrot'

  ## Append output file
  command << " /tmp/shotshare_screenshot.png"

  # Take the screenshot
  `#{command}`

  @pub.upload_screenshot File.new('/tmp/shotshare_screenshot.png', 'rb')
end

def send_data
  return false unless @api_key
  true
end

###  INITIALIZE  PROGRAM  ###
init

@pub.prepare_submission

###                       ###
### Start Doing Fun Stuff ###
###                       ###
gather_programs
gather_colors

# run display script
puts `#{@config['script']}` if @config['script']

take_screenshot
